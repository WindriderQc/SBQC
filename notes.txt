server:   ssh yb@104.129.129.22

editing ~/.ssh/config to add an entry to make this work for anything that uses SSH with your account (including scp, sftp, and rsync among others).

Host specialblend
  Hostname 104.129.129.22
  User yb





 const sky_url = `https://api.darksky.net/forecast/7d6708021ee4840eb38d457423ab8a9a/${lat},${lon}`
API_KEY=7d6708021ee4840eb38d457423ab8a9a







https://myaccount.google.com/lesssecureapps

Must be on to allow using the gmail api from unsecure app.    should get back to https or remember to activate this.











nmap -sV -p 22 192.168.0.1-255


curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
sudo apt-get install -y nodejs
node -v



sudo apt-get install preload






sudo apt-get install motion

sudo nano /etc/motion/motion.conf

Find the following lines and make the following changes.  (Ctrl+W is search in nano)

daemon off -> daemon on (this will run allow the program to run as a service)
stream_localhost on -> stream_localhost off 

Now we need to enable the motion daemon by editing the motion file:
sudo nano /etc/default/motion
Make the following change:
start_motion_daemon=no -> start_motion_daemon=yes

Next we need to make sure the motion capture directory is writable

sudo chmod 777 /var/lib/motion

Now make sure the camera is connected and start the service with the command:

sudo service motion start




ls ~/.ssh
ssh-keygen -t rsa -b 4096 -C "yanikbeaulieu@hotmail.com"
sudo apt install xclip
xclip -sel clip < ~/.ssh/id_rsa.pub

log to github and paste ssh key in settings






find . -type f -iname \*.avi -delete

rm -r /path/to/dir/*




df          // list all disk n space


sudo systemctl enable ssh


sudo nano /etc/samba/samba.conf
sudo service smbd restart



/* install node.js v12 */

curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
sudo apt install nodejs



/* Install VS Code   */

curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
sudo install -o root -g root -m 644 packages.microsoft.gpg /usr/share/keyrings/
sudo sh -c 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'

sudo apt-get install apt-transport-https
sudo apt-get update
sudo apt-get install code # or code-insiders




chrome://flags/#unsafely-treat-insecure-origin-as-secure



/* virtual terminal */

$ tmux
......
Connection fails for some reason
Reconect

$ tmux ls
0: 1 windows (created Tue Aug 23 12:39:52 2011) [103x30]

$ tmux attach -t 0




ps -ef | grep node       //  list all node process running



git commit -am "test" && git push





The line below is used to turn off the power LED
sudo sh -c 'echo 0 > /sys/class/leds/led1/brightness'

The line below is used to turn off the action LED
sudo sh -c 'echo 0 > /sys/class/leds/led0/brightness'


add to /boot/config.txt
# Disable Ethernet LEDs
dtparam=eth_led0=14
dtparam=eth_led1=14

# Disable the PWR LED
dtparam=pwr_led_trigger=none
dtparam=pwr_led_activelow=off

# Disable the Activity LED
dtparam=act_led_trigger=none
dtparam=act_led_activelow=off





cd c:\ABC
git init .
git config --global user.name <yourGitHubAccount>
git config --global user.email <yourGitHubEmailAccount>
git add .

git status
# edit .gitignore to ignore folder you don't want

git commit -m "first commit"
git remote add origin https://github.com/<yourGitHubAccount>/<yourRepo.git>
git push -u origin master




// Generate random key
node
require('crypto').randomBytes(64).toString('hex')





// Stats de l'Ordi

inxi -Fxz



// nvidia fix
sudo xed /etc/default/grub
GRUB_CMDLINE_LINUX_DEFAULT="quiet splash rcutree.rcu_idle_gp_delay=1 acpi_osi=! acpi_osi='Linux'"
save and
sudo update-grub 





// initial linux server setup
adduser sammy
usermod -aG sudo sammy

exit and login with sammy... :)





sudo apt install mosquitto
mosquitto -d
yb@flyinghq:~$ mosquitto_sub -t "test"
mosquitto_pub -m "message from mosquitto_pub client" -t "test"




chmod +x ./hello.js
pm2 start hello.js







// Setup Platform.io

curl -fsSL https://raw.githubusercontent.com/platformio/platformio-core/master/scripts/99-platformio-udev.rules | sudo tee /etc/udev/rules.d/99-platformio-udev.rules

sudo service udev restart
sudo usermod -a -G tty yb
sudo addgroup yb dialout
sudo addgroup yb tty





//set HDD to automount

sudo fdisk -l
sudo blkid

sudo mkdir /hdd  
sudo mkdir /nomdudisk     // mount point pour le HDD
sudo groupadd hdd
sudo usermod -aG hdd USERNAME 
sudo chown -R :hdd /nomdudisk
sudo nano /etc/fstab

add (avec le bon UUID):
UUID=14D82C19D82BF81E /hdd/nomdudisk    auto nosuid,nodev,nofail,x-gvfs-show 0 0

Pour tester: (ou reboot)
sudo mount -a